{{- range .Values.workers -}}

{{- $name := printf "%s-%s-worker" (include "tx.fullname" $) .name -}}
{{- $component := printf "%s-worker" .name -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
{{ include "tx.commonLabels" $ | indent 4 }}
    app.kubernetes.io/component: {{ $component }}
  {{- if .deploymentAnnotations }}
  annotations:
{{ toYaml .deploymentAnnotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: {{ $component }}
  template:
    metadata:
      labels:
{{ include "tx.commonLabels" $ | indent 8 }}
        app.kubernetes.io/component: {{ $component }}
      annotations:
        # We annotate the checksum of the config
        # so pods are updated when the config changes
        checksum/config: {{ include "tx.configCheckSum" $ }}
        {{- if .podAnnotations }}
{{ toYaml .podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "tx.serviceAccountName" $ }}
      volumes:
        - name: {{ include "tx.secretName" $ }}
          secret:
            secretName: {{ include "tx.secretName" $ }}
      # Required to read AWS token
      securityContext:
        runAsGroup: 10001
        runAsUser: 10001
        fsGroup: 10001
      containers:
        - name: {{ $name }}
          image: "{{ $.Values.imageRepository }}:{{ $.Values.version }}"
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: {{ .requestsCpu }}
              memory: {{ .requestsMemory }}
            limits:
              cpu: {{ .limitsCpu }}
              memory: {{ .limitsMemory }}
          command:
            {{- range .command }}
            - {{ . | quote }}
            {{- end }}
          {{- if .commandArgs }}
          args:
            {{- range .commandArgs }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          # env will take precedence over envFrom
          {{- if .env}}
          env:
            {{- range $envName, $envValue := .env }}
            - name: {{ $envName }}
              value: {{ $envValue | quote }}
            {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "tx.configName" $ }}
          volumeMounts:
            - name: {{ include "tx.secretName" $ }}
              readOnly: true
              mountPath: "/etc/secrets-volume"
          # Include a preStop hook with a shutdown delay for eventual consistency reasons.
          # See https://blog.gruntwork.io/delaying-shutdown-to-wait-for-pod-deletion-propagation-445f779a8304
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - "5"
---
{{ end -}}
